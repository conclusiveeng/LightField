#ifndef __VERSION_H__
#define __VERSION_H__

enum class BuildType
{
    Unknown,
    Release,
    Debug,
};

inline constexpr unsigned MakeVersionCode(unsigned major, unsigned minor, unsigned teeny, unsigned build = 0)
{
    return ((major & 0xFFu) << 24u) | ((minor & 0xFFu) << 16u) | ((teeny & 0xFFu) << 8u) | (build & 0xFFu);
}

inline constexpr void DecodeVersionCode(unsigned versionCode, int& major, int& minor, int& teeny, int& build)
{
    major = static_cast<int>((versionCode >> 24u) & 0xFFu);
    minor = static_cast<int>((versionCode >> 16u) & 0xFFu);
    teeny = static_cast<int>((versionCode >> 8u) & 0xFFu);
    build = static_cast<int>(versionCode  & 0xFFu);
}

const char* LIGHTFIELD_VERSION_STRING __attribute__(( weak )) = "@LF_VERSION_STRING@";
const unsigned int LIGHTFIELD_VERSION_MAJOR = @LF_VERSION_MAJOR@;
const unsigned int LIGHTFIELD_VERSION_MINOR = @LF_VERSION_MINOR@;
const unsigned int LIGHTFIELD_VERSION_TEENY = @LF_VERSION_TEENY@;
const unsigned int LIGHTFIELD_VERSION_BUILD = @LF_VERSION_BUILD@;
const unsigned int LIGHTFIELD_VERSION_CODE = MakeVersionCode(LIGHTFIELD_VERSION_MAJOR, LIGHTFIELD_VERSION_MINOR,
    LIGHTFIELD_VERSION_TEENY, LIGHTFIELD_VERSION_BUILD);

#if defined _DEBUG
const BuildType LIGHTFIELD_VERSION_BUILD_TYPE = BuildType::Debug;
#elif defined NDEBUG
const BuildType LIGHTFIELD_VERSION_BUILD_TYPE = BuildType::Release;
#else
#error Unknown build type: Neither _DEBUG nor NDEBUG are #defined
#endif

const char* LIGHTFIELD_VERSION_RELEASE_TRAIN __attribute__(( weak )) = "@RELEASE_TRAIN@";
const char* LIGHTFIELD_VERSION_GITHASH __attribute__((weak)) = "@VERSION_GITHASH@";

#endif // __VERSION_H__
