#!/usr/bin/env bash

MOUNTMON_ROOT="${PWD}"
MAKEDIR="${MOUNTMON_ROOT}"
BUILDDIR="${MAKEDIR}/build"
PROJECTFILE="${MAKEDIR}/mountmon.pro"

rebuild () {
    local BUILD=debug
    local CLEAN=
    local NUKE=
    local QMAKE=

    if ! getopt -Q -q -n 'rebuild' -o 'cnqrx' -l 'clean,nuke-first,qmake-anyway,release' -- "$@"; then
        cat <<HERE
Runs "qmake" to regenerate the Makefile, if necessary, then "make" to
rebuild mountmon.

Usage: rebuild [-cnqrx] [--clean|--nuke-first|--qmake-anyway|--release]

  -c,     --clean          Run "make distclean" before running "make".
  -n, -x, --nuke-first     Delete and recreate the build directory before
                             running "make".
  -q,     --qmake-anyway   Run "qmake" even if timestamps suggest it
                             shouldn't be necessary.
  -r,     --release        Perform a release build instead of a debug
                             build.

HERE
        return
    fi

    local ARGS=$(getopt -n 'rebuild' -o 'cnqrx' -l 'clean,nuke-first,qmake-anyway,release' -- "$@")
    eval set -- "$ARGS"

    while [ -n "${1}" ]
    do
        case "${1}" in
            '-c'        | '--clean'        ) CLEAN=yes     ;;
            '-n' | '-x' | '--nuke-first'   )  NUKE=yes     ;;
            '-q'        | '--qmake-anyway' ) QMAKE=yes     ;;
            '-r'        | '--release'      ) BUILD=release ;;
            '--' )
                shift
                break
                ;;
            * )
				echo "Unknown option: '${1}'" 1>&2
                return
                ;;
        esac
        shift
    done

    if [ -d "${BUILDDIR}" ]
    then
        if [ ! -f "${BUILDDIR}/.lastbuildmode" ]
        then
            echo ${BUILD} > ${BUILDDIR}/.lastbuildmode
            NUKE=yes
        fi

        local LASTBUILDMODE="$(<${BUILDDIR}/.lastbuildmode)"
        if [ -n "${LASTBUILDMODE}"  -a  "${BUILD}" != "${LASTBUILDMODE}" ]
        then
            echo Switching from ${LASTBUILDMODE} to ${BUILD}.
            NUKE=yes
        fi

        if [ -n "${NUKE}" ]
        then
            unset CLEAN
            QMAKE=yes
            rm -dr ${BUILDDIR} && mkdir -p ${BUILDDIR}
        fi
    else
        mkdir -p ${BUILDDIR}
    fi

    cd ${MAKEDIR}

    if [ -n "${CLEAN}" ]
    then
        QMAKE=yes
        make distclean
    fi

    if [ -n "${QMAKE}"   -o  ! -f Makefile  -o  ${PROJECTFILE} -nt Makefile ]
    then
        qmake CONFIG+=${BUILD} ${PROJECTFILE} || return
        echo "${BUILD}" > ${BUILDDIR}/.lastbuildmode
    fi

    make -j${QT_BUILD_JOBS-12}
}

rebuild $*
